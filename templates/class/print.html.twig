{% extends 'base.html.twig' %}

{% block title %}Teachermarks - Impression {{ selectedClass.name }} {% endblock %}

{% block body %}
    <div class="container-fluid d-flex flex-column justify-content-center d-print-none">
        <div class="bg-secondary bg-opacity-25 m-lg-5 p-3 rounded-3">
            <div class="d-flex flex-column justify-content-around align-items-center py-3">
                <h2>
                    Classe: 
                    <span class="p-1 rounded-2 fw-bolder {{ isDarkBackground ? 'text-light' : 'text-dark' }}" style="background-color: {{selectedClass.color}}">
                    {{selectedClass.name}}
                    </span>
                </h2>
            </div>
            <h5>Effectif : {{students|length}} </h5>

            <div class="table-responsive">
                
                <form id="printStudents">    
                {% for student in students %}
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="{{ student.id }}" id="student{{student.id}}" checked>
                        <label class="form-check-label" for="student{{student.id}}">
                            {{student.lastname}} {{student.firstname}} {{student.id}}
                        </label>
                    </div>
                {% endfor %}
                </form>

                <button id="generatepdf" class="btn btn-secondary"><i class="bi bi-pdf"></i> Exporter comme PDF</button>
                
            </div>
        </div>
    </div>

    <pre>
        {{ dump(students) }}
    </pre>
    {{dump(studentsResults)}}


    <div class="d-none d-print" id="topdf">
        <h2>
            Nb d'élèves sélectionnés = {{studentsResults|length}}
        </h2>
        <li>
            {% for student in students %}
                <ul>{{student.lastname}}</ul>
            {% endfor %}
        </li>
    </div>

    <script>
        
        const generatepdf = (event) => {
            event.preventDefault();

            const element = document.getElementById('topdf');
            element.classList.remove("d-none");
            const options = {
                margin: 1,
                filename: 'results.pdf',
                image: { type: 'jpeg', quality: 0.98 },
                html2canvas: { scale: 2 },
                jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' }
            };

            // Promise-based usage:
            html2pdf().set(options).from(element).save();
        }

        const generateButton = document.getElementById("generatepdf");
        generateButton.addEventListener('click', generatepdf);

    </script>

{% endblock %}

